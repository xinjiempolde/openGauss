// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remote_read.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_remote_5fread_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_remote_5fread_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_remote_5fread_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_remote_5fread_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_remote_5fread_2eproto;
namespace gauss {
class CURequest;
class CURequestDefaultTypeInternal;
extern CURequestDefaultTypeInternal _CURequest_default_instance_;
class CUResponse;
class CUResponseDefaultTypeInternal;
extern CUResponseDefaultTypeInternal _CUResponse_default_instance_;
class PageRequest;
class PageRequestDefaultTypeInternal;
extern PageRequestDefaultTypeInternal _PageRequest_default_instance_;
class PageResponse;
class PageResponseDefaultTypeInternal;
extern PageResponseDefaultTypeInternal _PageResponse_default_instance_;
}  // namespace gauss
PROTOBUF_NAMESPACE_OPEN
template<> ::gauss::CURequest* Arena::CreateMaybeMessage<::gauss::CURequest>(Arena*);
template<> ::gauss::CUResponse* Arena::CreateMaybeMessage<::gauss::CUResponse>(Arena*);
template<> ::gauss::PageRequest* Arena::CreateMaybeMessage<::gauss::PageRequest>(Arena*);
template<> ::gauss::PageResponse* Arena::CreateMaybeMessage<::gauss::PageResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace gauss {

// ===================================================================

class CURequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gauss.CURequest) */ {
 public:
  CURequest();
  virtual ~CURequest();

  CURequest(const CURequest& from);
  CURequest(CURequest&& from) noexcept
    : CURequest() {
    *this = ::std::move(from);
  }

  inline CURequest& operator=(const CURequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CURequest& operator=(CURequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CURequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CURequest* internal_default_instance() {
    return reinterpret_cast<const CURequest*>(
               &_CURequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CURequest& a, CURequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CURequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CURequest* New() const final {
    return CreateMaybeMessage<CURequest>(nullptr);
  }

  CURequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CURequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CURequest& from);
  void MergeFrom(const CURequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CURequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gauss.CURequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_remote_5fread_2eproto);
    return ::descriptor_table_remote_5fread_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpcnodeFieldNumber = 1,
    kDbnodeFieldNumber = 2,
    kRelnodeFieldNumber = 3,
    kBucketnodeFieldNumber = 4,
    kOffsetFieldNumber = 6,
    kColidFieldNumber = 5,
    kSizeFieldNumber = 7,
    kLsnFieldNumber = 8,
  };
  // uint32 spcnode = 1;
  void clear_spcnode();
  ::PROTOBUF_NAMESPACE_ID::uint32 spcnode() const;
  void set_spcnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_spcnode() const;
  void _internal_set_spcnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dbnode = 2;
  void clear_dbnode();
  ::PROTOBUF_NAMESPACE_ID::uint32 dbnode() const;
  void set_dbnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dbnode() const;
  void _internal_set_dbnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 relnode = 3;
  void clear_relnode();
  ::PROTOBUF_NAMESPACE_ID::uint32 relnode() const;
  void set_relnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relnode() const;
  void _internal_set_relnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 bucketnode = 4;
  void clear_bucketnode();
  ::PROTOBUF_NAMESPACE_ID::int32 bucketnode() const;
  void set_bucketnode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bucketnode() const;
  void _internal_set_bucketnode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 offset = 6;
  void clear_offset();
  ::PROTOBUF_NAMESPACE_ID::uint64 offset() const;
  void set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_offset() const;
  void _internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 colid = 5;
  void clear_colid();
  ::PROTOBUF_NAMESPACE_ID::int32 colid() const;
  void set_colid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_colid() const;
  void _internal_set_colid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 size = 7;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::int32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 lsn = 8;
  void clear_lsn();
  ::PROTOBUF_NAMESPACE_ID::uint64 lsn() const;
  void set_lsn(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lsn() const;
  void _internal_set_lsn(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:gauss.CURequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 spcnode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dbnode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relnode_;
  ::PROTOBUF_NAMESPACE_ID::int32 bucketnode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 offset_;
  ::PROTOBUF_NAMESPACE_ID::int32 colid_;
  ::PROTOBUF_NAMESPACE_ID::int32 size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lsn_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_remote_5fread_2eproto;
};
// -------------------------------------------------------------------

class CUResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gauss.CUResponse) */ {
 public:
  CUResponse();
  virtual ~CUResponse();

  CUResponse(const CUResponse& from);
  CUResponse(CUResponse&& from) noexcept
    : CUResponse() {
    *this = ::std::move(from);
  }

  inline CUResponse& operator=(const CUResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CUResponse& operator=(CUResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CUResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CUResponse* internal_default_instance() {
    return reinterpret_cast<const CUResponse*>(
               &_CUResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(CUResponse& a, CUResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CUResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CUResponse* New() const final {
    return CreateMaybeMessage<CUResponse>(nullptr);
  }

  CUResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CUResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CUResponse& from);
  void MergeFrom(const CUResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CUResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gauss.CUResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_remote_5fread_2eproto);
    return ::descriptor_table_remote_5fread_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCudataFieldNumber = 3,
    kReturnCodeFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // bytes cudata = 3;
  void clear_cudata();
  const std::string& cudata() const;
  void set_cudata(const std::string& value);
  void set_cudata(std::string&& value);
  void set_cudata(const char* value);
  void set_cudata(const void* value, size_t size);
  std::string* mutable_cudata();
  std::string* release_cudata();
  void set_allocated_cudata(std::string* cudata);
  private:
  const std::string& _internal_cudata() const;
  void _internal_set_cudata(const std::string& value);
  std::string* _internal_mutable_cudata();
  public:

  // int32 return_code = 1;
  void clear_return_code();
  ::PROTOBUF_NAMESPACE_ID::int32 return_code() const;
  void set_return_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_return_code() const;
  void _internal_set_return_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::int32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gauss.CUResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr cudata_;
  ::PROTOBUF_NAMESPACE_ID::int32 return_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_remote_5fread_2eproto;
};
// -------------------------------------------------------------------

class PageRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gauss.PageRequest) */ {
 public:
  PageRequest();
  virtual ~PageRequest();

  PageRequest(const PageRequest& from);
  PageRequest(PageRequest&& from) noexcept
    : PageRequest() {
    *this = ::std::move(from);
  }

  inline PageRequest& operator=(const PageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageRequest& operator=(PageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageRequest* internal_default_instance() {
    return reinterpret_cast<const PageRequest*>(
               &_PageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PageRequest& a, PageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PageRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PageRequest* New() const final {
    return CreateMaybeMessage<PageRequest>(nullptr);
  }

  PageRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PageRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PageRequest& from);
  void MergeFrom(const PageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gauss.PageRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_remote_5fread_2eproto);
    return ::descriptor_table_remote_5fread_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpcnodeFieldNumber = 1,
    kDbnodeFieldNumber = 2,
    kRelnodeFieldNumber = 3,
    kBucketnodeFieldNumber = 4,
    kForknumFieldNumber = 5,
    kBlocknumFieldNumber = 6,
    kLsnFieldNumber = 8,
    kBlocksizeFieldNumber = 7,
  };
  // uint32 spcnode = 1;
  void clear_spcnode();
  ::PROTOBUF_NAMESPACE_ID::uint32 spcnode() const;
  void set_spcnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_spcnode() const;
  void _internal_set_spcnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 dbnode = 2;
  void clear_dbnode();
  ::PROTOBUF_NAMESPACE_ID::uint32 dbnode() const;
  void set_dbnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dbnode() const;
  void _internal_set_dbnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 relnode = 3;
  void clear_relnode();
  ::PROTOBUF_NAMESPACE_ID::uint32 relnode() const;
  void set_relnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_relnode() const;
  void _internal_set_relnode(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 bucketnode = 4;
  void clear_bucketnode();
  ::PROTOBUF_NAMESPACE_ID::int32 bucketnode() const;
  void set_bucketnode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_bucketnode() const;
  void _internal_set_bucketnode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 forknum = 5;
  void clear_forknum();
  ::PROTOBUF_NAMESPACE_ID::int32 forknum() const;
  void set_forknum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_forknum() const;
  void _internal_set_forknum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 blocknum = 6;
  void clear_blocknum();
  ::PROTOBUF_NAMESPACE_ID::uint32 blocknum() const;
  void set_blocknum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blocknum() const;
  void _internal_set_blocknum(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 lsn = 8;
  void clear_lsn();
  ::PROTOBUF_NAMESPACE_ID::uint64 lsn() const;
  void set_lsn(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lsn() const;
  void _internal_set_lsn(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 blocksize = 7;
  void clear_blocksize();
  ::PROTOBUF_NAMESPACE_ID::uint32 blocksize() const;
  void set_blocksize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_blocksize() const;
  void _internal_set_blocksize(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:gauss.PageRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 spcnode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dbnode_;
  ::PROTOBUF_NAMESPACE_ID::uint32 relnode_;
  ::PROTOBUF_NAMESPACE_ID::int32 bucketnode_;
  ::PROTOBUF_NAMESPACE_ID::int32 forknum_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blocknum_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lsn_;
  ::PROTOBUF_NAMESPACE_ID::uint32 blocksize_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_remote_5fread_2eproto;
};
// -------------------------------------------------------------------

class PageResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gauss.PageResponse) */ {
 public:
  PageResponse();
  virtual ~PageResponse();

  PageResponse(const PageResponse& from);
  PageResponse(PageResponse&& from) noexcept
    : PageResponse() {
    *this = ::std::move(from);
  }

  inline PageResponse& operator=(const PageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PageResponse& operator=(PageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PageResponse* internal_default_instance() {
    return reinterpret_cast<const PageResponse*>(
               &_PageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PageResponse& a, PageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PageResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PageResponse* New() const final {
    return CreateMaybeMessage<PageResponse>(nullptr);
  }

  PageResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PageResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PageResponse& from);
  void MergeFrom(const PageResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PageResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gauss.PageResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_remote_5fread_2eproto);
    return ::descriptor_table_remote_5fread_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPagedataFieldNumber = 3,
    kReturnCodeFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // bytes pagedata = 3;
  void clear_pagedata();
  const std::string& pagedata() const;
  void set_pagedata(const std::string& value);
  void set_pagedata(std::string&& value);
  void set_pagedata(const char* value);
  void set_pagedata(const void* value, size_t size);
  std::string* mutable_pagedata();
  std::string* release_pagedata();
  void set_allocated_pagedata(std::string* pagedata);
  private:
  const std::string& _internal_pagedata() const;
  void _internal_set_pagedata(const std::string& value);
  std::string* _internal_mutable_pagedata();
  public:

  // int32 return_code = 1;
  void clear_return_code();
  ::PROTOBUF_NAMESPACE_ID::int32 return_code() const;
  void set_return_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_return_code() const;
  void _internal_set_return_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::int32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gauss.PageResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pagedata_;
  ::PROTOBUF_NAMESPACE_ID::int32 return_code_;
  ::PROTOBUF_NAMESPACE_ID::int32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_remote_5fread_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CURequest

// uint32 spcnode = 1;
inline void CURequest::clear_spcnode() {
  spcnode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CURequest::_internal_spcnode() const {
  return spcnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CURequest::spcnode() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.spcnode)
  return _internal_spcnode();
}
inline void CURequest::_internal_set_spcnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  spcnode_ = value;
}
inline void CURequest::set_spcnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_spcnode(value);
  // @@protoc_insertion_point(field_set:gauss.CURequest.spcnode)
}

// uint32 dbnode = 2;
inline void CURequest::clear_dbnode() {
  dbnode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CURequest::_internal_dbnode() const {
  return dbnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CURequest::dbnode() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.dbnode)
  return _internal_dbnode();
}
inline void CURequest::_internal_set_dbnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dbnode_ = value;
}
inline void CURequest::set_dbnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dbnode(value);
  // @@protoc_insertion_point(field_set:gauss.CURequest.dbnode)
}

// uint32 relnode = 3;
inline void CURequest::clear_relnode() {
  relnode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CURequest::_internal_relnode() const {
  return relnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CURequest::relnode() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.relnode)
  return _internal_relnode();
}
inline void CURequest::_internal_set_relnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  relnode_ = value;
}
inline void CURequest::set_relnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relnode(value);
  // @@protoc_insertion_point(field_set:gauss.CURequest.relnode)
}

// int32 bucketnode = 4;
inline void CURequest::clear_bucketnode() {
  bucketnode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CURequest::_internal_bucketnode() const {
  return bucketnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CURequest::bucketnode() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.bucketnode)
  return _internal_bucketnode();
}
inline void CURequest::_internal_set_bucketnode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bucketnode_ = value;
}
inline void CURequest::set_bucketnode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bucketnode(value);
  // @@protoc_insertion_point(field_set:gauss.CURequest.bucketnode)
}

// int32 colid = 5;
inline void CURequest::clear_colid() {
  colid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CURequest::_internal_colid() const {
  return colid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CURequest::colid() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.colid)
  return _internal_colid();
}
inline void CURequest::_internal_set_colid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  colid_ = value;
}
inline void CURequest::set_colid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_colid(value);
  // @@protoc_insertion_point(field_set:gauss.CURequest.colid)
}

// uint64 offset = 6;
inline void CURequest::clear_offset() {
  offset_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CURequest::_internal_offset() const {
  return offset_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CURequest::offset() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.offset)
  return _internal_offset();
}
inline void CURequest::_internal_set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  offset_ = value;
}
inline void CURequest::set_offset(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_offset(value);
  // @@protoc_insertion_point(field_set:gauss.CURequest.offset)
}

// int32 size = 7;
inline void CURequest::clear_size() {
  size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CURequest::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CURequest::size() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.size)
  return _internal_size();
}
inline void CURequest::_internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  size_ = value;
}
inline void CURequest::set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:gauss.CURequest.size)
}

// uint64 lsn = 8;
inline void CURequest::clear_lsn() {
  lsn_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CURequest::_internal_lsn() const {
  return lsn_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CURequest::lsn() const {
  // @@protoc_insertion_point(field_get:gauss.CURequest.lsn)
  return _internal_lsn();
}
inline void CURequest::_internal_set_lsn(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  lsn_ = value;
}
inline void CURequest::set_lsn(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lsn(value);
  // @@protoc_insertion_point(field_set:gauss.CURequest.lsn)
}

// -------------------------------------------------------------------

// CUResponse

// int32 return_code = 1;
inline void CUResponse::clear_return_code() {
  return_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUResponse::_internal_return_code() const {
  return return_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUResponse::return_code() const {
  // @@protoc_insertion_point(field_get:gauss.CUResponse.return_code)
  return _internal_return_code();
}
inline void CUResponse::_internal_set_return_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  return_code_ = value;
}
inline void CUResponse::set_return_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_return_code(value);
  // @@protoc_insertion_point(field_set:gauss.CUResponse.return_code)
}

// int32 size = 2;
inline void CUResponse::clear_size() {
  size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUResponse::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CUResponse::size() const {
  // @@protoc_insertion_point(field_get:gauss.CUResponse.size)
  return _internal_size();
}
inline void CUResponse::_internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  size_ = value;
}
inline void CUResponse::set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:gauss.CUResponse.size)
}

// bytes cudata = 3;
inline void CUResponse::clear_cudata() {
  cudata_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CUResponse::cudata() const {
  // @@protoc_insertion_point(field_get:gauss.CUResponse.cudata)
  return _internal_cudata();
}
inline void CUResponse::set_cudata(const std::string& value) {
  _internal_set_cudata(value);
  // @@protoc_insertion_point(field_set:gauss.CUResponse.cudata)
}
inline std::string* CUResponse::mutable_cudata() {
  // @@protoc_insertion_point(field_mutable:gauss.CUResponse.cudata)
  return _internal_mutable_cudata();
}
inline const std::string& CUResponse::_internal_cudata() const {
  return cudata_.GetNoArena();
}
inline void CUResponse::_internal_set_cudata(const std::string& value) {
  
  cudata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CUResponse::set_cudata(std::string&& value) {
  
  cudata_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gauss.CUResponse.cudata)
}
inline void CUResponse::set_cudata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  cudata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gauss.CUResponse.cudata)
}
inline void CUResponse::set_cudata(const void* value, size_t size) {
  
  cudata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gauss.CUResponse.cudata)
}
inline std::string* CUResponse::_internal_mutable_cudata() {
  
  return cudata_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CUResponse::release_cudata() {
  // @@protoc_insertion_point(field_release:gauss.CUResponse.cudata)
  
  return cudata_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CUResponse::set_allocated_cudata(std::string* cudata) {
  if (cudata != nullptr) {
    
  } else {
    
  }
  cudata_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), cudata);
  // @@protoc_insertion_point(field_set_allocated:gauss.CUResponse.cudata)
}

// -------------------------------------------------------------------

// PageRequest

// uint32 spcnode = 1;
inline void PageRequest::clear_spcnode() {
  spcnode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::_internal_spcnode() const {
  return spcnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::spcnode() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.spcnode)
  return _internal_spcnode();
}
inline void PageRequest::_internal_set_spcnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  spcnode_ = value;
}
inline void PageRequest::set_spcnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_spcnode(value);
  // @@protoc_insertion_point(field_set:gauss.PageRequest.spcnode)
}

// uint32 dbnode = 2;
inline void PageRequest::clear_dbnode() {
  dbnode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::_internal_dbnode() const {
  return dbnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::dbnode() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.dbnode)
  return _internal_dbnode();
}
inline void PageRequest::_internal_set_dbnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  dbnode_ = value;
}
inline void PageRequest::set_dbnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dbnode(value);
  // @@protoc_insertion_point(field_set:gauss.PageRequest.dbnode)
}

// uint32 relnode = 3;
inline void PageRequest::clear_relnode() {
  relnode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::_internal_relnode() const {
  return relnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::relnode() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.relnode)
  return _internal_relnode();
}
inline void PageRequest::_internal_set_relnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  relnode_ = value;
}
inline void PageRequest::set_relnode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_relnode(value);
  // @@protoc_insertion_point(field_set:gauss.PageRequest.relnode)
}

// int32 bucketnode = 4;
inline void PageRequest::clear_bucketnode() {
  bucketnode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageRequest::_internal_bucketnode() const {
  return bucketnode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageRequest::bucketnode() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.bucketnode)
  return _internal_bucketnode();
}
inline void PageRequest::_internal_set_bucketnode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  bucketnode_ = value;
}
inline void PageRequest::set_bucketnode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_bucketnode(value);
  // @@protoc_insertion_point(field_set:gauss.PageRequest.bucketnode)
}

// int32 forknum = 5;
inline void PageRequest::clear_forknum() {
  forknum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageRequest::_internal_forknum() const {
  return forknum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageRequest::forknum() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.forknum)
  return _internal_forknum();
}
inline void PageRequest::_internal_set_forknum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  forknum_ = value;
}
inline void PageRequest::set_forknum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_forknum(value);
  // @@protoc_insertion_point(field_set:gauss.PageRequest.forknum)
}

// uint32 blocknum = 6;
inline void PageRequest::clear_blocknum() {
  blocknum_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::_internal_blocknum() const {
  return blocknum_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::blocknum() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.blocknum)
  return _internal_blocknum();
}
inline void PageRequest::_internal_set_blocknum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  blocknum_ = value;
}
inline void PageRequest::set_blocknum(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blocknum(value);
  // @@protoc_insertion_point(field_set:gauss.PageRequest.blocknum)
}

// uint32 blocksize = 7;
inline void PageRequest::clear_blocksize() {
  blocksize_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::_internal_blocksize() const {
  return blocksize_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PageRequest::blocksize() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.blocksize)
  return _internal_blocksize();
}
inline void PageRequest::_internal_set_blocksize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  blocksize_ = value;
}
inline void PageRequest::set_blocksize(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_blocksize(value);
  // @@protoc_insertion_point(field_set:gauss.PageRequest.blocksize)
}

// uint64 lsn = 8;
inline void PageRequest::clear_lsn() {
  lsn_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PageRequest::_internal_lsn() const {
  return lsn_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PageRequest::lsn() const {
  // @@protoc_insertion_point(field_get:gauss.PageRequest.lsn)
  return _internal_lsn();
}
inline void PageRequest::_internal_set_lsn(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  lsn_ = value;
}
inline void PageRequest::set_lsn(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lsn(value);
  // @@protoc_insertion_point(field_set:gauss.PageRequest.lsn)
}

// -------------------------------------------------------------------

// PageResponse

// int32 return_code = 1;
inline void PageResponse::clear_return_code() {
  return_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageResponse::_internal_return_code() const {
  return return_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageResponse::return_code() const {
  // @@protoc_insertion_point(field_get:gauss.PageResponse.return_code)
  return _internal_return_code();
}
inline void PageResponse::_internal_set_return_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  return_code_ = value;
}
inline void PageResponse::set_return_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_return_code(value);
  // @@protoc_insertion_point(field_set:gauss.PageResponse.return_code)
}

// int32 size = 2;
inline void PageResponse::clear_size() {
  size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageResponse::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PageResponse::size() const {
  // @@protoc_insertion_point(field_get:gauss.PageResponse.size)
  return _internal_size();
}
inline void PageResponse::_internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  size_ = value;
}
inline void PageResponse::set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:gauss.PageResponse.size)
}

// bytes pagedata = 3;
inline void PageResponse::clear_pagedata() {
  pagedata_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PageResponse::pagedata() const {
  // @@protoc_insertion_point(field_get:gauss.PageResponse.pagedata)
  return _internal_pagedata();
}
inline void PageResponse::set_pagedata(const std::string& value) {
  _internal_set_pagedata(value);
  // @@protoc_insertion_point(field_set:gauss.PageResponse.pagedata)
}
inline std::string* PageResponse::mutable_pagedata() {
  // @@protoc_insertion_point(field_mutable:gauss.PageResponse.pagedata)
  return _internal_mutable_pagedata();
}
inline const std::string& PageResponse::_internal_pagedata() const {
  return pagedata_.GetNoArena();
}
inline void PageResponse::_internal_set_pagedata(const std::string& value) {
  
  pagedata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PageResponse::set_pagedata(std::string&& value) {
  
  pagedata_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gauss.PageResponse.pagedata)
}
inline void PageResponse::set_pagedata(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pagedata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gauss.PageResponse.pagedata)
}
inline void PageResponse::set_pagedata(const void* value, size_t size) {
  
  pagedata_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gauss.PageResponse.pagedata)
}
inline std::string* PageResponse::_internal_mutable_pagedata() {
  
  return pagedata_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PageResponse::release_pagedata() {
  // @@protoc_insertion_point(field_release:gauss.PageResponse.pagedata)
  
  return pagedata_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PageResponse::set_allocated_pagedata(std::string* pagedata) {
  if (pagedata != nullptr) {
    
  } else {
    
  }
  pagedata_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pagedata);
  // @@protoc_insertion_point(field_set_allocated:gauss.PageResponse.pagedata)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gauss

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_remote_5fread_2eproto
