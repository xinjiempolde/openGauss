/*
 * *** Do not change this file by hand. It is automatically
 * *** generated from the DocBook documentation.
 *
 * generated by
 *     /usr/bin/perl create_help.pl ../../../doc/src/sgml/ref sql_help
 *
 */

#ifndef SQL_HELP_H
#define SQL_HELP_H

#define N_(x) (x)				/* gettext noop */

#include "postgres_fe.h"
#include "libpq/pqexpbuffer.h"

struct _helpStruct
{
	const char	   *cmd;		/* the command name */
	const char	   *help;		/* the help associated with it */
	void (*syntaxfunc)(PQExpBuffer);	/* function that prints the syntax associated with it */
	int				nl_count;	/* number of newlines in syntax (for pager) */
};

extern void sql_help_ABORT(PQExpBuffer buf);
extern void sql_help_ALTER_APP_WORKLOAD_GROUP(PQExpBuffer buf);
extern void sql_help_ALTER_APP_WORKLOAD_GROUP_MAPPING(PQExpBuffer buf);
extern void sql_help_ALTER_AUDIT_POLICY(PQExpBuffer buf);
extern void sql_help_ALTER_DATA_SOURCE(PQExpBuffer buf);
extern void sql_help_ALTER_DATABASE(PQExpBuffer buf);
extern void sql_help_ALTER_DEFAULT_PRIVILEGES(PQExpBuffer buf);
extern void sql_help_ALTER_DIRECTORY(PQExpBuffer buf);
extern void sql_help_ALTER_EXTENSION(PQExpBuffer buf);
extern void sql_help_ALTER_FOREIGN_TABLE(PQExpBuffer buf);
extern void sql_help_ALTER_FOREIGN_TABLE_FOR_HDFS(PQExpBuffer buf);
extern void sql_help_ALTER_FUNCTION(PQExpBuffer buf);
extern void sql_help_ALTER_GROUP(PQExpBuffer buf);
extern void sql_help_ALTER_INDEX(PQExpBuffer buf);
extern void sql_help_ALTER_LARGE_OBJECT(PQExpBuffer buf);
extern void sql_help_ALTER_MASKING_POLICY(PQExpBuffer buf);
extern void sql_help_ALTER_NODE(PQExpBuffer buf);
extern void sql_help_ALTER_NODE_GROUP(PQExpBuffer buf);
extern void sql_help_ALTER_RESOURCE_LABEL(PQExpBuffer buf);
extern void sql_help_ALTER_RESOURCE_POOL(PQExpBuffer buf);
extern void sql_help_ALTER_ROLE(PQExpBuffer buf);
extern void sql_help_ALTER_ROW_LEVEL_SECURITY_POLICY(PQExpBuffer buf);
extern void sql_help_ALTER_SCHEMA(PQExpBuffer buf);
extern void sql_help_ALTER_SEQUENCE(PQExpBuffer buf);
extern void sql_help_ALTER_SERVER(PQExpBuffer buf);
extern void sql_help_ALTER_SESSION(PQExpBuffer buf);
extern void sql_help_ALTER_SYNONYM(PQExpBuffer buf);
extern void sql_help_ALTER_SYSTEM_KILL_SESSION(PQExpBuffer buf);
extern void sql_help_ALTER_SYSTEM_SET(PQExpBuffer buf);
extern void sql_help_ALTER_TABLE(PQExpBuffer buf);
extern void sql_help_ALTER_TABLE_PARTITION(PQExpBuffer buf);
extern void sql_help_ALTER_TABLESPACE(PQExpBuffer buf);
extern void sql_help_ALTER_TEXT_SEARCH_CONFIGURATION(PQExpBuffer buf);
extern void sql_help_ALTER_TEXT_SEARCH_DICTIONARY(PQExpBuffer buf);
extern void sql_help_ALTER_TRIGGER(PQExpBuffer buf);
extern void sql_help_ALTER_TYPE(PQExpBuffer buf);
extern void sql_help_ALTER_USER(PQExpBuffer buf);
extern void sql_help_ALTER_VIEW(PQExpBuffer buf);
extern void sql_help_ALTER_WORKLOAD_GROUP(PQExpBuffer buf);
extern void sql_help_ANALYSE(PQExpBuffer buf);
extern void sql_help_ANALYZE(PQExpBuffer buf);
extern void sql_help_ANONYMOUS_BLOCK(PQExpBuffer buf);
extern void sql_help_BEGIN(PQExpBuffer buf);
extern void sql_help_CALL(PQExpBuffer buf);
extern void sql_help_CHECKPOINT(PQExpBuffer buf);
extern void sql_help_CLEAN_CONNECTION(PQExpBuffer buf);
extern void sql_help_CLOSE(PQExpBuffer buf);
extern void sql_help_CLUSTER(PQExpBuffer buf);
extern void sql_help_COMMENT(PQExpBuffer buf);
extern void sql_help_COMMIT(PQExpBuffer buf);
extern void sql_help_COMMIT_PREPARED(PQExpBuffer buf);
extern void sql_help_COPY(PQExpBuffer buf);
extern void sql_help_CREATE_APP_WORKLOAD_GROUP(PQExpBuffer buf);
extern void sql_help_CREATE_APP_WORKLOAD_GROUP_MAPPING(PQExpBuffer buf);
extern void sql_help_CREATE_AUDIT_POLICY(PQExpBuffer buf);
extern void sql_help_CREATE_BARRIER(PQExpBuffer buf);
extern void sql_help_CREATE_CLIENT_MASTER_KEY(PQExpBuffer buf);
extern void sql_help_CREATE_COLUMN_ENCRYPTION_KEY(PQExpBuffer buf);
extern void sql_help_CREATE_DATA_SOURCE(PQExpBuffer buf);
extern void sql_help_CREATE_DATABASE(PQExpBuffer buf);
extern void sql_help_CREATE_DIRECTORY(PQExpBuffer buf);
extern void sql_help_CREATE_EXTENSION(PQExpBuffer buf);
extern void sql_help_CREATE_FOREIGN_TABLE(PQExpBuffer buf);
extern void sql_help_CREATE_FUNCTION(PQExpBuffer buf);
extern void sql_help_CREATE_GROUP(PQExpBuffer buf);
extern void sql_help_CREATE_INDEX(PQExpBuffer buf);
extern void sql_help_CREATE_MASKING_POLICY(PQExpBuffer buf);
extern void sql_help_CREATE_MATERIALIZED_VIEW(PQExpBuffer buf);
extern void sql_help_CREATE_NODE(PQExpBuffer buf);
extern void sql_help_CREATE_NODE_GROUP(PQExpBuffer buf);
extern void sql_help_CREATE_PROCEDURE(PQExpBuffer buf);
extern void sql_help_CREATE_RESOURCE_LABEL(PQExpBuffer buf);
extern void sql_help_CREATE_RESOURCE_POOL(PQExpBuffer buf);
extern void sql_help_CREATE_ROLE(PQExpBuffer buf);
extern void sql_help_CREATE_ROW_LEVEL_SECURITY_POLICY(PQExpBuffer buf);
extern void sql_help_CREATE_SCHEMA(PQExpBuffer buf);
extern void sql_help_CREATE_SEQUENCE(PQExpBuffer buf);
extern void sql_help_CREATE_SERVER(PQExpBuffer buf);
extern void sql_help_CREATE_SYNONYM(PQExpBuffer buf);
extern void sql_help_CREATE_TABLE(PQExpBuffer buf);
extern void sql_help_CREATE_TABLE_AS(PQExpBuffer buf);
extern void sql_help_CREATE_TABLE_PARTITION(PQExpBuffer buf);
extern void sql_help_CREATE_TABLESPACE(PQExpBuffer buf);
extern void sql_help_CREATE_TEXT_SEARCH_CONFIGURATION(PQExpBuffer buf);
extern void sql_help_CREATE_TEXT_SEARCH_DICTIONARY(PQExpBuffer buf);
extern void sql_help_CREATE_TRIGGER(PQExpBuffer buf);
extern void sql_help_CREATE_TYPE(PQExpBuffer buf);
extern void sql_help_CREATE_USER(PQExpBuffer buf);
extern void sql_help_CREATE_VIEW(PQExpBuffer buf);
extern void sql_help_CREATE_WEAK_PASSWORD_DICTIONARY(PQExpBuffer buf);
extern void sql_help_CREATE_WORKLOAD_GROUP(PQExpBuffer buf);
extern void sql_help_CURSOR(PQExpBuffer buf);
extern void sql_help_DEALLOCATE(PQExpBuffer buf);
extern void sql_help_DECLARE(PQExpBuffer buf);
extern void sql_help_DELETE(PQExpBuffer buf);
extern void sql_help_DO(PQExpBuffer buf);
extern void sql_help_DROP_APP_WORKLOAD_GROUP(PQExpBuffer buf);
extern void sql_help_DROP_APP_WORKLOAD_GROUP_MAPPING(PQExpBuffer buf);
extern void sql_help_DROP_AUDIT_POLICY(PQExpBuffer buf);
extern void sql_help_DROP_CLIENT_MASTER_KEY(PQExpBuffer buf);
extern void sql_help_DROP_COLUMN_ENCRYPTION_KEY(PQExpBuffer buf);
extern void sql_help_DROP_DATA_SOURCE(PQExpBuffer buf);
extern void sql_help_DROP_DATABASE(PQExpBuffer buf);
extern void sql_help_DROP_DIRECTORY(PQExpBuffer buf);
extern void sql_help_DROP_EXTENSION(PQExpBuffer buf);
extern void sql_help_DROP_FOREIGN_TABLE(PQExpBuffer buf);
extern void sql_help_DROP_FUNCTION(PQExpBuffer buf);
extern void sql_help_DROP_GROUP(PQExpBuffer buf);
extern void sql_help_DROP_INDEX(PQExpBuffer buf);
extern void sql_help_DROP_MASKING_POLICY(PQExpBuffer buf);
extern void sql_help_DROP_MATERIALIZED_VIEW(PQExpBuffer buf);
extern void sql_help_DROP_NODE(PQExpBuffer buf);
extern void sql_help_DROP_NODE_GROUP(PQExpBuffer buf);
extern void sql_help_DROP_OWNED(PQExpBuffer buf);
extern void sql_help_DROP_PROCEDURE(PQExpBuffer buf);
extern void sql_help_DROP_RESOURCE_LABEL(PQExpBuffer buf);
extern void sql_help_DROP_RESOURCE_POOL(PQExpBuffer buf);
extern void sql_help_DROP_ROLE(PQExpBuffer buf);
extern void sql_help_DROP_ROW_LEVEL_SECURITY_POLICY(PQExpBuffer buf);
extern void sql_help_DROP_SCHEMA(PQExpBuffer buf);
extern void sql_help_DROP_SEQUENCE(PQExpBuffer buf);
extern void sql_help_DROP_SERVER(PQExpBuffer buf);
extern void sql_help_DROP_SYNONYM(PQExpBuffer buf);
extern void sql_help_DROP_TABLE(PQExpBuffer buf);
extern void sql_help_DROP_TABLESPACE(PQExpBuffer buf);
extern void sql_help_DROP_TEXT_SEARCH_CONFIGURATION(PQExpBuffer buf);
extern void sql_help_DROP_TEXT_SEARCH_DICTIONARY(PQExpBuffer buf);
extern void sql_help_DROP_TRIGGER(PQExpBuffer buf);
extern void sql_help_DROP_TYPE(PQExpBuffer buf);
extern void sql_help_DROP_USER(PQExpBuffer buf);
extern void sql_help_DROP_VIEW(PQExpBuffer buf);
extern void sql_help_DROP_WEAK_PASSWORD_DICTIONARY(PQExpBuffer buf);
extern void sql_help_DROP_WORKLOAD_GROUP(PQExpBuffer buf);
extern void sql_help_END(PQExpBuffer buf);
extern void sql_help_EXECUTE(PQExpBuffer buf);
extern void sql_help_EXECUTE_DIRECT(PQExpBuffer buf);
extern void sql_help_EXPLAIN(PQExpBuffer buf);
extern void sql_help_FETCH(PQExpBuffer buf);
extern void sql_help_GRANT(PQExpBuffer buf);
extern void sql_help_INSERT(PQExpBuffer buf);
extern void sql_help_LOCK(PQExpBuffer buf);
extern void sql_help_MERGE(PQExpBuffer buf);
extern void sql_help_MOVE(PQExpBuffer buf);
extern void sql_help_PREPARE(PQExpBuffer buf);
extern void sql_help_PREPARE_TRANSACTION(PQExpBuffer buf);
extern void sql_help_REASSIGN_OWNED(PQExpBuffer buf);
extern void sql_help_REFRESH_MATERIALIZED_VIEW(PQExpBuffer buf);
extern void sql_help_REINDEX(PQExpBuffer buf);
extern void sql_help_RESET(PQExpBuffer buf);
extern void sql_help_REVOKE(PQExpBuffer buf);
extern void sql_help_ROLLBACK(PQExpBuffer buf);
extern void sql_help_ROLLBACK_PREPARED(PQExpBuffer buf);
extern void sql_help_SELECT(PQExpBuffer buf);
extern void sql_help_SELECT_INTO(PQExpBuffer buf);
extern void sql_help_SET(PQExpBuffer buf);
extern void sql_help_SET_CONSTRAINTS(PQExpBuffer buf);
extern void sql_help_SET_ROLE(PQExpBuffer buf);
extern void sql_help_SET_SESSION_AUTHORIZATION(PQExpBuffer buf);
extern void sql_help_SET_TRANSACTION(PQExpBuffer buf);
extern void sql_help_SHOW(PQExpBuffer buf);
extern void sql_help_START_TRANSACTION(PQExpBuffer buf);
extern void sql_help_TRUNCATE(PQExpBuffer buf);
extern void sql_help_UPDATE(PQExpBuffer buf);
extern void sql_help_VACUUM(PQExpBuffer buf);
extern void sql_help_VALUES(PQExpBuffer buf);


static const struct _helpStruct QL_HELP[] = {
    { "ABORT",
      N_("abort the current transaction"),
      sql_help_ABORT,
      0 },

    { "ALTER APP WORKLOAD GROUP",
      N_("change the definition of a app workload group"),
      sql_help_ALTER_APP_WORKLOAD_GROUP,
      0 },

    { "ALTER APP WORKLOAD GROUP MAPPING",
      N_("modify app group relate with group mapping"),
      sql_help_ALTER_APP_WORKLOAD_GROUP_MAPPING,
      1 },

    { "ALTER AUDIT POLICY",
      N_("change a audit policy"),
      sql_help_ALTER_AUDIT_POLICY,
      19 },

    { "ALTER DATA SOURCE",
      N_("alter the data source"),
      sql_help_ALTER_DATA_SOURCE,
      8 },

    { "ALTER DATABASE",
      N_("change a database"),
      sql_help_ALTER_DATABASE,
      13 },

    { "ALTER DEFAULT PRIVILEGES",
      N_("define default access privileges"),
      sql_help_ALTER_DEFAULT_PRIVILEGES,
      46 },

    { "ALTER DIRECTORY",
      N_("change a directory"),
      sql_help_ALTER_DIRECTORY,
      1 },

    { "ALTER EXTENSION",
      N_("change the definition of an extension"),
      sql_help_ALTER_EXTENSION,
      15 },

    { "ALTER FOREIGN TABLE",
      N_("change the definition of a foreign table"),
      sql_help_ALTER_FOREIGN_TABLE,
      68 },

    { "ALTER FOREIGN TABLE FOR HDFS",
      N_("change the definition of a foreign table"),
      sql_help_ALTER_FOREIGN_TABLE_FOR_HDFS,
      14 },

    { "ALTER FUNCTION",
      N_("change the definition of a function"),
      sql_help_ALTER_FUNCTION,
      19 },

    { "ALTER GROUP",
      N_("change role name or membership"),
      sql_help_ALTER_GROUP,
      5 },

    { "ALTER INDEX",
      N_("change the definition of an index"),
      sql_help_ALTER_INDEX,
      15 },

    { "ALTER LARGE OBJECT",
      N_("change the definition of a large object"),
      sql_help_ALTER_LARGE_OBJECT,
      1 },

    { "ALTER MASKING POLICY",
      N_("change a masking policy"),
      sql_help_ALTER_MASKING_POLICY,
      12 },

    { "ALTER NODE",
      N_("alter a cluster node"),
      sql_help_ALTER_NODE,
      16 },

    { "ALTER NODE GROUP",
      N_("alter a group of cluster nodes"),
      sql_help_ALTER_NODE_GROUP,
      12 },

    { "ALTER RESOURCE LABEL",
      N_("change a resource label"),
      sql_help_ALTER_RESOURCE_LABEL,
      6 },

    { "ALTER RESOURCE POOL",
      N_("change the resource pool"),
      sql_help_ALTER_RESOURCE_POOL,
      1 },

    { "ALTER ROLE",
      N_("change a database role"),
      sql_help_ALTER_ROLE,
      35 },

    { "ALTER ROW LEVEL SECURITY POLICY",
      N_("change the definition of a row level security policy"),
      sql_help_ALTER_ROW_LEVEL_SECURITY_POLICY,
      4 },

    { "ALTER SCHEMA",
      N_("change the definition of a schema"),
      sql_help_ALTER_SCHEMA,
      3 },

    { "ALTER SEQUENCE",
      N_("change the definition of a sequence generator"),
      sql_help_ALTER_SEQUENCE,
      3 },

    { "ALTER SERVER",
      N_("change the definition of a foreign server"),
      sql_help_ALTER_SERVER,
      5 },

    { "ALTER SESSION",
      N_("define and modify the current session influenced by condition or parameter"),
      sql_help_ALTER_SESSION,
      11 },

    { "ALTER SYNONYM",
      N_("change a synonym"),
      sql_help_ALTER_SYNONYM,
      1 },

    { "ALTER SYSTEM KILL SESSION",
      N_("kill and finish a system session"),
      sql_help_ALTER_SYSTEM_KILL_SESSION,
      0 },

    { "ALTER SYSTEM SET",
      N_("set a high-level(postmaster, sighup and backend) GUC."),
      sql_help_ALTER_SYSTEM_SET,
      0 },

    { "ALTER TABLE",
      N_("change the definition of a table"),
      sql_help_ALTER_TABLE,
      82 },

    { "ALTER TABLE PARTITION",
      N_("change the definition of a partition"),
      sql_help_ALTER_TABLE_PARTITION,
      45 },

    { "ALTER TABLESPACE",
      N_("change the definition of a tablespace"),
      sql_help_ALTER_TABLESPACE,
      9 },

    { "ALTER TEXT SEARCH CONFIGURATION",
      N_("change the definition of a text search configuration"),
      sql_help_ALTER_TEXT_SEARCH_CONFIGURATION,
      14 },

    { "ALTER TEXT SEARCH DICTIONARY",
      N_("change the definition of a text search dictionary"),
      sql_help_ALTER_TEXT_SEARCH_DICTIONARY,
      3 },

    { "ALTER TRIGGER",
      N_("change the definition of a trigger"),
      sql_help_ALTER_TRIGGER,
      0 },

    { "ALTER TYPE",
      N_("change the definition of a type"),
      sql_help_ALTER_TYPE,
      12 },

    { "ALTER USER",
      N_("change a database role"),
      sql_help_ALTER_USER,
      35 },

    { "ALTER VIEW",
      N_("change the definition of a view"),
      sql_help_ALTER_VIEW,
      13 },

    { "ALTER WORKLOAD GROUP",
      N_("change the definition of a workload group"),
      sql_help_ALTER_WORKLOAD_GROUP,
      1 },

    { "ANALYSE",
      N_("collect statistics about a database"),
      sql_help_ANALYSE,
      13 },

    { "ANALYZE",
      N_("collect statistics about a database"),
      sql_help_ANALYZE,
      13 },

    { "ANONYMOUS BLOCK",
      N_("define an anonymous block"),
      sql_help_ANONYMOUS_BLOCK,
      4 },

    { "BEGIN",
      N_("1. start a anonymous block. 2. start a transaction."),
      sql_help_BEGIN,
      14 },

    { "CALL",
      N_("call a defined function"),
      sql_help_CALL,
      0 },

    { "CHECKPOINT",
      N_("force a transaction log checkpoint"),
      sql_help_CHECKPOINT,
      0 },

    { "CLEAN CONNECTION",
      N_("clean up pooler connections in a cluster"),
      sql_help_CLEAN_CONNECTION,
      3 },

    { "CLOSE",
      N_("close a cursor"),
      sql_help_CLOSE,
      0 },

    { "CLUSTER",
      N_("cluster a table according to an index"),
      sql_help_CLUSTER,
      2 },

    { "COMMENT",
      N_("define or change the comment of an object"),
      sql_help_COMMENT,
      33 },

    { "COMMIT",
      N_("commit the current transaction"),
      sql_help_COMMIT,
      0 },

    { "COMMIT PREPARED",
      N_("commit a transaction that was earlier prepared for two-phase commit"),
      sql_help_COMMIT_PREPARED,
      0 },

    { "COPY",
      N_("copy data between a file and a table"),
      sql_help_COPY,
      67 },

    { "CREATE APP WORKLOAD GROUP",
      N_("create the definition of a app workload group"),
      sql_help_CREATE_APP_WORKLOAD_GROUP,
      0 },

    { "CREATE APP WORKLOAD GROUP MAPPING",
      N_("create a workload group mapping"),
      sql_help_CREATE_APP_WORKLOAD_GROUP_MAPPING,
      1 },

    { "CREATE AUDIT POLICY",
      N_("define a new audit policy"),
      sql_help_CREATE_AUDIT_POLICY,
      18 },

    { "CREATE BARRIER",
      N_("create a new barrier"),
      sql_help_CREATE_BARRIER,
      0 },

    { "CREATE CLIENT MASTER KEY",
      N_("create client master key"),
      sql_help_CREATE_CLIENT_MASTER_KEY,
      1 },

    { "CREATE COLUMN ENCRYPTION KEY",
      N_("create column encryption key"),
      sql_help_CREATE_COLUMN_ENCRYPTION_KEY,
      1 },

    { "CREATE DATA SOURCE",
      N_("define a data source"),
      sql_help_CREATE_DATA_SOURCE,
      6 },

    { "CREATE DATABASE",
      N_("create a new database"),
      sql_help_CREATE_DATABASE,
      8 },

    { "CREATE DIRECTORY",
      N_("create a new directory"),
      sql_help_CREATE_DIRECTORY,
      1 },

    { "CREATE EXTENSION",
      N_("install an extension"),
      sql_help_CREATE_EXTENSION,
      3 },

    { "CREATE FOREIGN TABLE",
      N_("define a new foreign table"),
      sql_help_CREATE_FOREIGN_TABLE,
      36 },

    { "CREATE FUNCTION",
      N_("define a new function"),
      sql_help_CREATE_FUNCTION,
      40 },

    { "CREATE GROUP",
      N_("define a new database role"),
      sql_help_CREATE_GROUP,
      35 },

    { "CREATE INDEX",
      N_("define a new index"),
      sql_help_CREATE_INDEX,
      9 },

    { "CREATE MASKING POLICY",
      N_("define a new masking policy"),
      sql_help_CREATE_MASKING_POLICY,
      12 },

    { "CREATE MATERIALIZED VIEW",
      N_("define a new materialized view"),
      sql_help_CREATE_MATERIALIZED_VIEW,
      3 },

    { "CREATE NODE",
      N_("create a new cluster node"),
      sql_help_CREATE_NODE,
      16 },

    { "CREATE NODE GROUP",
      N_("create a group of cluster nodes"),
      sql_help_CREATE_NODE_GROUP,
      4 },

    { "CREATE PROCEDURE",
      N_("create a procedure"),
      sql_help_CREATE_PROCEDURE,
      3 },

    { "CREATE RESOURCE LABEL",
      N_("define a new resource label"),
      sql_help_CREATE_RESOURCE_LABEL,
      6 },

    { "CREATE RESOURCE POOL",
      N_("define a new resource pool"),
      sql_help_CREATE_RESOURCE_POOL,
      1 },

    { "CREATE ROLE",
      N_("define a new database role"),
      sql_help_CREATE_ROLE,
      35 },

    { "CREATE ROW LEVEL SECURITY POLICY",
      N_("define a new row level security policy for a table"),
      sql_help_CREATE_ROW_LEVEL_SECURITY_POLICY,
      4 },

    { "CREATE SCHEMA",
      N_("define a new schema"),
      sql_help_CREATE_SCHEMA,
      2 },

    { "CREATE SEQUENCE",
      N_("define a new sequence generator"),
      sql_help_CREATE_SEQUENCE,
      3 },

    { "CREATE SERVER",
      N_("define a new foreign server"),
      sql_help_CREATE_SERVER,
      2 },

    { "CREATE SYNONYM",
      N_("define a new synonym"),
      sql_help_CREATE_SYNONYM,
      1 },

    { "CREATE TABLE",
      N_("define a new table"),
      sql_help_CREATE_TABLE,
      53 },

    { "CREATE TABLE AS",
      N_("define a new table from the results of a query"),
      sql_help_CREATE_TABLE_AS,
      8 },

    { "CREATE TABLE PARTITION",
      N_("define a new table partition"),
      sql_help_CREATE_TABLE_PARTITION,
      50 },

    { "CREATE TABLESPACE",
      N_("define a new tablespace"),
      sql_help_CREATE_TABLESPACE,
      9 },

    { "CREATE TEXT SEARCH CONFIGURATION",
      N_("define a new text search configuration"),
      sql_help_CREATE_TEXT_SEARCH_CONFIGURATION,
      3 },

    { "CREATE TEXT SEARCH DICTIONARY",
      N_("define a new text search dictionary"),
      sql_help_CREATE_TEXT_SEARCH_DICTIONARY,
      2 },

    { "CREATE TRIGGER",
      N_("define a new trigger"),
      sql_help_CREATE_TRIGGER,
      13 },

    { "CREATE TYPE",
      N_("define a new data type"),
      sql_help_CREATE_TYPE,
      27 },

    { "CREATE USER",
      N_("define a new database role"),
      sql_help_CREATE_USER,
      35 },

    { "CREATE VIEW",
      N_("define a new view"),
      sql_help_CREATE_VIEW,
      2 },

    { "CREATE WEAK PASSWORD DICTIONARY",
      N_("create weak password dictionary"),
      sql_help_CREATE_WEAK_PASSWORD_DICTIONARY,
      1 },

    { "CREATE WORKLOAD GROUP",
      N_("define a new workload group"),
      sql_help_CREATE_WORKLOAD_GROUP,
      1 },

    { "CURSOR",
      N_("define a cursor"),
      sql_help_CURSOR,
      2 },

    { "DEALLOCATE",
      N_("deallocate a prepared statement"),
      sql_help_DEALLOCATE,
      0 },

    { "DECLARE",
      N_("1. declare a cursor. 2. start an anonymous block."),
      sql_help_DECLARE,
      9 },

    { "DELETE",
      N_("delete rows of a table"),
      sql_help_DELETE,
      4 },

    { "DO",
      N_("execute an anonymous code block"),
      sql_help_DO,
      0 },

    { "DROP APP WORKLOAD GROUP",
      N_("change the definition of a workload group"),
      sql_help_DROP_APP_WORKLOAD_GROUP,
      0 },

    { "DROP APP WORKLOAD GROUP MAPPING",
      N_("remove a workload group mapping"),
      sql_help_DROP_APP_WORKLOAD_GROUP_MAPPING,
      0 },

    { "DROP AUDIT POLICY",
      N_("remove a audit policy"),
      sql_help_DROP_AUDIT_POLICY,
      0 },

    { "DROP CLIENT MASTER KEY",
      N_("drop client master key"),
      sql_help_DROP_CLIENT_MASTER_KEY,
      0 },

    { "DROP COLUMN ENCRYPTION KEY",
      N_("drop column encryption key"),
      sql_help_DROP_COLUMN_ENCRYPTION_KEY,
      0 },

    { "DROP DATA SOURCE",
      N_("remove a data source"),
      sql_help_DROP_DATA_SOURCE,
      0 },

    { "DROP DATABASE",
      N_("remove a database"),
      sql_help_DROP_DATABASE,
      0 },

    { "DROP DIRECTORY",
      N_("remove a directory"),
      sql_help_DROP_DIRECTORY,
      0 },

    { "DROP EXTENSION",
      N_("remove an extension"),
      sql_help_DROP_EXTENSION,
      0 },

    { "DROP FOREIGN TABLE",
      N_("remove a foreign table"),
      sql_help_DROP_FOREIGN_TABLE,
      1 },

    { "DROP FUNCTION",
      N_("remove a function"),
      sql_help_DROP_FUNCTION,
      0 },

    { "DROP GROUP",
      N_("remove a database role"),
      sql_help_DROP_GROUP,
      0 },

    { "DROP INDEX",
      N_("remove an index"),
      sql_help_DROP_INDEX,
      1 },

    { "DROP MASKING POLICY",
      N_("remove a masking policy"),
      sql_help_DROP_MASKING_POLICY,
      0 },

    { "DROP MATERIALIZED VIEW",
      N_("remove a materialized view"),
      sql_help_DROP_MATERIALIZED_VIEW,
      0 },

    { "DROP NODE",
      N_("drop a cluster node"),
      sql_help_DROP_NODE,
      0 },

    { "DROP NODE GROUP",
      N_("drop a group of cluster nodes"),
      sql_help_DROP_NODE_GROUP,
      2 },

    { "DROP OWNED",
      N_("remove database objects owned by a database role"),
      sql_help_DROP_OWNED,
      0 },

    { "DROP PROCEDURE",
      N_("drop a defined procedure"),
      sql_help_DROP_PROCEDURE,
      0 },

    { "DROP RESOURCE LABEL",
      N_("remove a resource label"),
      sql_help_DROP_RESOURCE_LABEL,
      0 },

    { "DROP RESOURCE POOL",
      N_("remove a resource pool"),
      sql_help_DROP_RESOURCE_POOL,
      0 },

    { "DROP ROLE",
      N_("remove a database role"),
      sql_help_DROP_ROLE,
      0 },

    { "DROP ROW LEVEL SECURITY POLICY",
      N_("remove a row level security policy from a table"),
      sql_help_DROP_ROW_LEVEL_SECURITY_POLICY,
      0 },

    { "DROP SCHEMA",
      N_("remove a schema"),
      sql_help_DROP_SCHEMA,
      0 },

    { "DROP SEQUENCE",
      N_("remove a sequence"),
      sql_help_DROP_SEQUENCE,
      0 },

    { "DROP SERVER",
      N_("remove a foreign server descriptor"),
      sql_help_DROP_SERVER,
      0 },

    { "DROP SYNONYM",
      N_("remove a synonym"),
      sql_help_DROP_SYNONYM,
      0 },

    { "DROP TABLE",
      N_("remove a table"),
      sql_help_DROP_TABLE,
      1 },

    { "DROP TABLESPACE",
      N_("remove a tablespace"),
      sql_help_DROP_TABLESPACE,
      0 },

    { "DROP TEXT SEARCH CONFIGURATION",
      N_("remove a text search configuration"),
      sql_help_DROP_TEXT_SEARCH_CONFIGURATION,
      0 },

    { "DROP TEXT SEARCH DICTIONARY",
      N_("remove a text search dictionary"),
      sql_help_DROP_TEXT_SEARCH_DICTIONARY,
      0 },

    { "DROP TRIGGER",
      N_("remove a trigger"),
      sql_help_DROP_TRIGGER,
      0 },

    { "DROP TYPE",
      N_("remove a data type"),
      sql_help_DROP_TYPE,
      0 },

    { "DROP USER",
      N_("remove a database role"),
      sql_help_DROP_USER,
      0 },

    { "DROP VIEW",
      N_("remove a view"),
      sql_help_DROP_VIEW,
      0 },

    { "DROP WEAK PASSWORD DICTIONARY",
      N_("drop all weak password"),
      sql_help_DROP_WEAK_PASSWORD_DICTIONARY,
      0 },

    { "DROP WORKLOAD GROUP",
      N_("remove a workload group"),
      sql_help_DROP_WORKLOAD_GROUP,
      0 },

    { "END",
      N_("commit the current transaction"),
      sql_help_END,
      0 },

    { "EXECUTE",
      N_("execute a prepared statement"),
      sql_help_EXECUTE,
      0 },

    { "EXECUTE DIRECT",
      N_("launch queries directly to dedicated nodes"),
      sql_help_EXECUTE_DIRECT,
      1 },

    { "EXPLAIN",
      N_("show the execution plan of a statement"),
      sql_help_EXPLAIN,
      15 },

    { "FETCH",
      N_("retrieve rows from a query using a cursor"),
      sql_help_FETCH,
      16 },

    { "GRANT",
      N_("define access privileges"),
      sql_help_GRANT,
      64 },

    { "INSERT",
      N_("create new rows in a table"),
      sql_help_INSERT,
      4 },

    { "LOCK",
      N_("lock a table"),
      sql_help_LOCK,
      2 },

    { "MERGE",
      N_("insert, update, or delete rows of a table based upon source data"),
      sql_help_MERGE,
      13 },

    { "MOVE",
      N_("position a cursor"),
      sql_help_MOVE,
      16 },

    { "PREPARE",
      N_("prepare a statement for execution"),
      sql_help_PREPARE,
      0 },

    { "PREPARE TRANSACTION",
      N_("prepare the current transaction for two-phase commit"),
      sql_help_PREPARE_TRANSACTION,
      0 },

    { "REASSIGN OWNED",
      N_("change the ownership of database objects owned by a database role"),
      sql_help_REASSIGN_OWNED,
      0 },

    { "REFRESH MATERIALIZED VIEW",
      N_("replace the contents of a materialized view"),
      sql_help_REFRESH_MATERIALIZED_VIEW,
      0 },

    { "REINDEX",
      N_("rebuild indexes"),
      sql_help_REINDEX,
      2 },

    { "RESET",
      N_("restore the value of a run-time parameter to the default value"),
      sql_help_RESET,
      0 },

    { "REVOKE",
      N_("remove access privileges"),
      sql_help_REVOKE,
      80 },

    { "ROLLBACK",
      N_("abort the current transaction"),
      sql_help_ROLLBACK,
      0 },

    { "ROLLBACK PREPARED",
      N_("cancel a transaction that was earlier prepared for two-phase commit"),
      sql_help_ROLLBACK_PREPARED,
      0 },

    { "SELECT",
      N_("retrieve rows from a table or view"),
      sql_help_SELECT,
      36 },

    { "SELECT INTO",
      N_("define a new table from the results of a query"),
      sql_help_SELECT_INTO,
      14 },

    { "SET",
      N_("change a run-time parameter"),
      sql_help_SET,
      7 },

    { "SET CONSTRAINTS",
      N_("set constraint check timing for the current transaction"),
      sql_help_SET_CONSTRAINTS,
      0 },

    { "SET ROLE",
      N_("set the current user identifier of the current session"),
      sql_help_SET_ROLE,
      1 },

    { "SET SESSION AUTHORIZATION",
      N_("set the current user identifier and session identifier of the current session"),
      sql_help_SET_SESSION_AUTHORIZATION,
      2 },

    { "SET TRANSACTION",
      N_("set the characteristics of the current transaction"),
      sql_help_SET_TRANSACTION,
      4 },

    { "SHOW",
      N_("show the value of a run-time parameter"),
      sql_help_SHOW,
      0 },

    { "START TRANSACTION",
      N_("start a transaction block"),
      sql_help_START_TRANSACTION,
      3 },

    { "TRUNCATE",
      N_("empty a table or set of tables"),
      sql_help_TRUNCATE,
      3 },

    { "UPDATE",
      N_("update rows of a table"),
      sql_help_UPDATE,
      5 },

    { "VACUUM",
      N_("garbage-collect and optionally analyze a database"),
      sql_help_VACUUM,
      6 },

    { "VALUES",
      N_("compute a set of rows"),
      sql_help_VALUES,
      4 },


    { NULL, NULL, NULL }    /* End of list marker */
};


#define QL_HELP_COUNT	165		/* number of help items */
#define QL_MAX_CMD_LEN	33		/* largest strlen(cmd) */


#endif /* SQL_HELP_H */
